{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CREATE_LISTINGS, GET_LISTINGS, GET_A_LISTING, UPDATE_LISTING, DELETE_LISTING, CLEAR_LISTING } from './types';\nexport const getAllListings = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/v1/listings');\n    dispatch({\n      type: GET_LISTINGS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createListing = data => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/v1/listings', data, config);\n    dispatch({\n      type: CREATE_LISTINGS,\n      payload: res.data\n    });\n    dispatch(setAlert('Your listings has been uploaded successfully!'));\n  } catch (error) {}\n};\nexport const getAListing = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/v1/listings/${id}`);\n    dispatch({\n      type: GET_A_LISTING,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateListing = (formdata, id, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  try {\n    const res = await axios.put(`/api/v1/listings/${id}`, formdata, config);\n    dispatch({\n      type: UPDATE_LISTING,\n      payload: res.data\n    });\n    history.push('/dashboard');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteListing = id => async dispatch => {\n  if (window.confirm('Are you sure? This action can not be undone.')) {\n    try {\n      const res = await axios.delete(`/api/v1/listings/${id}`);\n      dispatch({\n        type: DELETE_LISTING,\n        payload: id\n      });\n      dispatch(setAlert('Your listing has been permanently deleted!'));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/actions/listing.js"],"names":["axios","setAlert","CREATE_LISTINGS","GET_LISTINGS","GET_A_LISTING","UPDATE_LISTING","DELETE_LISTING","CLEAR_LISTING","getAllListings","dispatch","res","get","type","payload","data","error","console","log","createListing","config","headers","post","getAListing","id","updateListing","formdata","history","put","push","deleteListing","window","confirm","delete","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport { CREATE_LISTINGS, GET_LISTINGS, GET_A_LISTING, UPDATE_LISTING, DELETE_LISTING, CLEAR_LISTING } from './types';\r\n\r\nexport const getAllListings = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/v1/listings');\r\n\r\n    dispatch({\r\n      type: GET_LISTINGS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createListing = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  try {\r\n    const res = await axios.post('/api/v1/listings',data, config);\r\n\r\n    dispatch({\r\n      type: CREATE_LISTINGS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Your listings has been uploaded successfully!'));\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getAListing = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/v1/listings/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_A_LISTING,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateListing = (formdata, id, history) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.put(`/api/v1/listings/${id}`, formdata, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_LISTING,\r\n      payload: res.data\r\n    });\r\n\r\n    history.push('/dashboard');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteListing = (id) => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This action can not be undone.')) {\r\n    try {\r\n      const res = await axios.delete(`/api/v1/listings/${id}`);\r\n\r\n      dispatch({ type: DELETE_LISTING, payload: id });\r\n\r\n      dispatch(setAlert('Your listing has been permanently deleted!'));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}