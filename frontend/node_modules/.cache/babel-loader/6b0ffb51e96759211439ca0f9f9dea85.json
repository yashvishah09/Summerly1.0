{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashv\\\\Downloads\\\\Summerly2.0-main\\\\Summerly2.0-main\\\\frontend\\\\src\\\\components\\\\CreateAccount\\\\CreateAccount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Segment, Form, Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport './CreateAccount.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    role: 'user',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    firstName,\n    lastName,\n    role,\n    email,\n    password,\n    confirmPassword\n  } = formData;\n\n  const handleChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      props.setAlert('Passwords do not match', 'danger');\n    } else {\n      props.register({\n        firstName,\n        lastName,\n        role,\n        email,\n        password,\n        confirmPassword\n      });\n    }\n  };\n\n  if (props.isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createAccount\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      style: {\n        width: '40%',\n        marginLeft: '25%',\n        marginTop: '3%',\n        border: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sign up to Summerly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"First Name\",\n                placeholder: \"Edward\",\n                name: \"firstName\",\n                value: firstName,\n                onChange: e => handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"Last Name\",\n                placeholder: \"Shway\",\n                name: \"lastName\",\n                value: lastName,\n                onChange: e => handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0.8rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1rem',\n              fontWeight: 'bold'\n            },\n            children: \"Are you a lister or looking for accomodation?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: role,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lister\",\n              children: \"a lister\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"finding accomodation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Email Address\",\n          placeholder: \"summerly@gmail.com\",\n          name: \"email\",\n          value: email,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"New Password\",\n                placeholder: \"Summerly1234@\",\n                name: \"password\",\n                value: password,\n                onChange: e => handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"Confirm Password\",\n                placeholder: \"Summerly1234@\",\n                name: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: e => handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n          style: {\n            marginTop: '15px'\n          },\n          content: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAccount, \"FPpklAkq5KKEnW42W4y3F3X7JeE=\");\n\n_c = CreateAccount;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(CreateAccount);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/components/CreateAccount/CreateAccount.jsx"],"names":["React","useState","Segment","Form","Grid","connect","Redirect","setAlert","register","CreateAccount","props","formData","setFormData","firstName","lastName","role","email","password","confirmPassword","handleChange","event","target","name","value","handleSubmit","preventDefault","isAuthenticated","width","marginLeft","marginTop","border","marginBottom","e","margin","fontSize","fontWeight","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Segment, Form, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport './CreateAccount.css';\r\n\r\nfunction CreateAccount(props) {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    role: 'user',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { firstName, lastName, role, email, password, confirmPassword } = formData;\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      props.setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      props.register({ firstName, lastName, role, email, password, confirmPassword });\r\n    }\r\n  };\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div className='createAccount'>\r\n      <Segment style={{ width: '40%', marginLeft: '25%', marginTop: '3%', border: 'none' }}>\r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <h5>Sign up to Summerly</h5>\r\n        </div>\r\n        <Form onSubmit={(e) => handleSubmit(e)}>\r\n          <Grid columns={2}>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Form.Input label='First Name' placeholder='Edward' name='firstName' value={firstName} onChange={(e) => handleChange(e)} />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Form.Input label='Last Name' placeholder='Shway' name='lastName' value={lastName} onChange={(e) => handleChange(e)} />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          <div style={{ margin: '0.8rem 0' }}>\r\n            <p style={{ fontSize: '1rem', fontWeight: 'bold' }}>Are you a lister or looking for accomodation?</p>\r\n            <select name='role' value={role} onChange={handleChange}>\r\n              <option value='lister'>a lister</option>\r\n              <option value='user'>finding accomodation</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Form.Input label='Email Address' placeholder='summerly@gmail.com' name='email' value={email} onChange={(e) => handleChange(e)} />\r\n          <Grid columns={2}>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Form.Input label='New Password' placeholder='Summerly1234@' name='password' value={password} onChange={(e) => handleChange(e)} />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Form.Input\r\n                  label='Confirm Password'\r\n                  placeholder='Summerly1234@'\r\n                  name='confirmPassword'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n\r\n          {/* <Dropdown onChange={(e) => handleChange(e, options)} options={options} placeholder='Choose an option' selection value={role} /> */}\r\n\r\n          <Form.Button style={{ marginTop: '15px' }} content='Submit' />\r\n        </Form>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(CreateAccount);\r\n"]},"metadata":{},"sourceType":"module"}