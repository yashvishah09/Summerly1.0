{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashv\\\\Downloads\\\\Summerly2.0-main\\\\Summerly2.0-main\\\\frontend\\\\src\\\\components\\\\ForgetPassword\\\\Password.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Segment, Form } from 'semantic-ui-react';\nimport { setAlert } from '../../actions/alert';\nimport { connect } from 'react-redux';\nimport { getAllUsers, forgotPassword } from '../../actions/profile';\nimport './ForgetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Password({\n  setAlert,\n  user,\n  profile: {\n    profiles\n  },\n  getAllUsers,\n  forgotPassword\n}) {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n  const userEmail = user.map(user => user.email);\n  const currentUser = profiles && profiles.data && profiles.data.data && // eslint-disable-next-line array-callback-return\n  profiles.data.data.filter(user1 => {\n    if (userEmail[0] === user1.email) {\n      return user1;\n    }\n  }); // console.log('Current User', currentUser[0].id);\n\n  const handleSubmit = () => {\n    if (password !== confirmPassword) {\n      setAlert('Passwords does not match');\n    } else {\n      forgotPassword({\n        password,\n        confirmPassword\n      }, currentUser[0].id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        style: {\n          width: '40%',\n          marginLeft: '25%',\n          marginTop: '10%',\n          border: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Welcome to Summerly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            onChange: event => setPassword(event.target.value),\n            value: password,\n            name: \"password\",\n            label: \"Enter your new password\",\n            placeholder: \"Summerly1234!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            onChange: event => setConfirmPassword(event.target.value),\n            value: confirmPassword,\n            name: \"confirmPassword\",\n            label: \"Enter your new password again\",\n            placeholder: \"Summerly1234!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n            content: \"submit\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Password, \"TZp2co5ciotXn/pNrTKS7Tn49SQ=\");\n\n_c = Password;\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  getAllUsers,\n  forgotPassword\n})(Password);\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/components/ForgetPassword/Password.jsx"],"names":["React","useEffect","useState","Segment","Form","setAlert","connect","getAllUsers","forgotPassword","Password","user","profile","profiles","password","setPassword","confirmPassword","setConfirmPassword","userEmail","map","email","currentUser","data","filter","user1","handleSubmit","id","width","marginLeft","marginTop","border","marginBottom","event","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { Segment, Form } from 'semantic-ui-react';\r\n\r\nimport { setAlert } from '../../actions/alert';\r\nimport { connect } from 'react-redux';\r\nimport { getAllUsers, forgotPassword } from '../../actions/profile';\r\n\r\nimport './ForgetPassword.css';\r\n\r\nfunction Password({ setAlert, user, profile: { profiles }, getAllUsers, forgotPassword }) {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  const userEmail = user.map((user) => user.email);\r\n\r\n  const currentUser =\r\n    profiles &&\r\n    profiles.data &&\r\n    profiles.data.data &&\r\n    // eslint-disable-next-line array-callback-return\r\n    profiles.data.data.filter((user1) => {\r\n      if (userEmail[0] === user1.email) {\r\n        return user1;\r\n      }\r\n    });\r\n\r\n  // console.log('Current User', currentUser[0].id);\r\n  const handleSubmit = () => {\r\n    if (password !== confirmPassword) {\r\n      setAlert('Passwords does not match');\r\n    } else {\r\n      forgotPassword({ password, confirmPassword }, currentUser[0].id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Segment style={{ width: '40%', marginLeft: '25%', marginTop: '10%', border: 'none' }}>\r\n          <div style={{ marginBottom: '1rem' }}>\r\n            <span>Welcome to Summerly</span>\r\n          </div>\r\n          <Form>\r\n            <Form.Input\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              value={password}\r\n              name='password'\r\n              label='Enter your new password'\r\n              placeholder='Summerly1234!'\r\n            />\r\n            <Form.Input\r\n              onChange={(event) => setConfirmPassword(event.target.value)}\r\n              value={confirmPassword}\r\n              name='confirmPassword'\r\n              label='Enter your new password again'\r\n              placeholder='Summerly1234!'\r\n            />\r\n            <Form.Button content='submit' onClick={handleSubmit} />\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, getAllUsers, forgotPassword })(Password);\r\n"]},"metadata":{},"sourceType":"module"}