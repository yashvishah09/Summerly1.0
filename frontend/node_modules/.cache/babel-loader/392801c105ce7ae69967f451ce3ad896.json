{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashv\\\\Downloads\\\\Summerly2.0-main\\\\Summerly2.0-main\\\\frontend\\\\src\\\\components\\\\Listings\\\\Listings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllListings } from '../../actions/listing';\nimport ListingItem from './ListingItem';\nimport { Fragment } from 'react';\nimport { Input } from 'semantic-ui-react';\nimport './Listing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Listings({\n  getAllListings,\n  listing: {\n    listings\n  }\n}) {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    getAllListings();\n  }, [getAllListings]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings__searchInput\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        size: \"large\",\n        style: {\n          width: '40%'\n        },\n        icon: \"search\",\n        placeholder: \"Search by city\",\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), listings && listings.data && listings.data.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listings.data.data.filter(val => {\n        if (searchTerm == '') {\n          return val;\n        } else if (val.city.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return val;\n        }\n      }).map(listing => /*#__PURE__*/_jsxDEV(ListingItem, {\n        listing: listing\n      }, listing._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listings, \"7rx4CbQaIs/5ckJbHkVuL5O30v0=\");\n\n_c = Listings;\n\nconst mapStateToProps = state => ({\n  listing: state.listing\n});\n\nexport default connect(mapStateToProps, {\n  getAllListings\n})(Listings);\n\nvar _c;\n\n$RefreshReg$(_c, \"Listings\");","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/components/Listings/Listings.jsx"],"names":["React","useEffect","useState","connect","getAllListings","ListingItem","Fragment","Input","Listings","listing","listings","searchTerm","setSearchTerm","width","event","target","value","data","filter","val","city","toLowerCase","includes","map","_id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,eAAP;;;AAEA,SAASC,QAAT,CAAkB;AAAEJ,EAAAA,cAAF;AAAkBK,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAA3B,CAAlB,EAA6D;AAAA;;AAC3D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBF,UAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAcGN,QAAQ,IAAIA,QAAQ,CAACO,IAArB,IAA6BP,QAAQ,CAACO,IAAT,CAAcA,IAA3C,gBACC;AAAA,gBACGP,QAAQ,CAACO,IAAT,CAAcA,IAAd,CACEC,MADF,CACUC,GAAD,IAAS;AACf,YAAIR,UAAU,IAAI,EAAlB,EAAsB;AACpB,iBAAOQ,GAAP;AACD,SAFD,MAEO,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCX,UAAU,CAACU,WAAX,EAAhC,CAAJ,EAA+D;AACpE,iBAAOF,GAAP;AACD;AACF,OAPF,EAQEI,GARF,CAQOd,OAAD,iBACH,QAAC,WAAD;AAA+B,QAAA,OAAO,EAAEA;AAAxC,SAAkBA,OAAO,CAACe,GAA1B;AAAA;AAAA;AAAA;AAAA,cATH;AADH;AAAA;AAAA;AAAA;AAAA,YADD,GAcG,IA5BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAvCQhB,Q;;KAAAA,Q;;AAyCT,MAAMiB,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,OAAO,EAAEiB,KAAK,CAACjB;AADmB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getAllListings } from '../../actions/listing';\r\nimport ListingItem from './ListingItem';\r\nimport { Fragment } from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nimport './Listing.css';\r\n\r\nfunction Listings({ getAllListings, listing: { listings } }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    getAllListings();\r\n  }, [getAllListings]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='listings__searchInput'>\r\n        <Input\r\n          type='text'\r\n          size='large'\r\n          style={{ width: '40%' }}\r\n          icon='search'\r\n          placeholder='Search by city'\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {listings && listings.data && listings.data.data ? (\r\n        <div>\r\n          {listings.data.data\r\n            .filter((val) => {\r\n              if (searchTerm == '') {\r\n                return val;\r\n              } else if (val.city.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return val;\r\n              }\r\n            })\r\n            .map((listing) => (\r\n              <ListingItem key={listing._id} listing={listing} />\r\n            ))}\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  listing: state.listing\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllListings })(Listings);\r\n"]},"metadata":{},"sourceType":"module"}