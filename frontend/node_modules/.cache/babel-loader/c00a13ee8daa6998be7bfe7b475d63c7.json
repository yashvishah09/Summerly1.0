{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, GET_USERS, UPDATE_USER_FORGOT_PASSWORD } from './types'; //Get current users profile\n\nexport const getCurrentUser = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/v1/users/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error\n      }\n    });\n  }\n}; //Update Profile\n\nexport const updateCurrentUser = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/v1/users/updateMe', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Profile updated'));\n    history.push('/dashboard');\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error\n      }\n    });\n  }\n};\nexport const deleteCurrentUser = () => async dispatch => {\n  if (window.confirm('Are you sure? This action can not be undone.')) {\n    try {\n      const res = await axios.delete('/api/v1/users/deleteMe');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your acoount has been permanently deleted!'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response\n        }\n      });\n    }\n  }\n};\nexport const getAllUsers = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/v1/users');\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const forgotPassword = ({\n  password,\n  confirmPassword\n}, id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    password,\n    confirmPassword\n  });\n\n  try {\n    const res = await axios.patch(`/api/v1/users/${id}`, body, config);\n    dispatch({\n      type: UPDATE_USER_FORGOT_PASSWORD,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/actions/profile.js"],"names":["axios","setAlert","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","GET_USERS","UPDATE_USER_FORGOT_PASSWORD","getCurrentUser","dispatch","res","get","type","payload","data","error","msg","updateCurrentUser","formData","history","config","headers","put","push","deleteCurrentUser","window","confirm","delete","err","response","getAllUsers","console","log","forgotPassword","password","confirmPassword","id","body","JSON","stringify","patch"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, GET_USERS, UPDATE_USER_FORGOT_PASSWORD } from './types';\r\n\r\n//Get current users profile\r\nexport const getCurrentUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/v1/users/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error }\r\n    });\r\n  }\r\n};\r\n\r\n//Update Profile\r\nexport const updateCurrentUser = (formData, history) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.put('/api/v1/users/updateMe', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Profile updated'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error }\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCurrentUser = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This action can not be undone.')) {\r\n    try {\r\n      const res = await axios.delete('/api/v1/users/deleteMe');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your acoount has been permanently deleted!'));\r\n    } catch (err) {\r\n      dispatch({ type: PROFILE_ERROR, payload: { msg: err.response } });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/v1/users');\r\n\r\n    dispatch({\r\n      type: GET_USERS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const forgotPassword =\r\n  ({ password, confirmPassword }, id) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ password, confirmPassword });\r\n\r\n    \r\n\r\n    try {\r\n      const res = await axios.patch(`/api/v1/users/${id}`, body, config);\r\n\r\n      dispatch({\r\n        type: UPDATE_USER_FORGOT_PASSWORD,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}