{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, USER_FAILED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE, GET_USERS, FORGOT_PASSWORD } from '../actions/types';\nimport setAuthToken from '../utils/setAuthToken'; //Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('api/v1/users/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: USER_FAILED\n    });\n  }\n}; //Register User\n\nexport const register = ({\n  firstName,\n  lastName,\n  role,\n  email,\n  password,\n  confirmPassword\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    firstName,\n    lastName,\n    role,\n    email,\n    password,\n    confirmPassword\n  });\n\n  try {\n    const res = await axios.post('api/v1/users/signup', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/v1/users/login', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //Logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n};\nexport const forgotPassword = ({\n  email\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n\n  try {\n    const res = await axios.post('api/v1/users/forgotpassword', body, config);\n    dispatch({\n      type: FORGOT_PASSWORD,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/yashv/Downloads/Summerly2.0-main/Summerly2.0-main/frontend/src/actions/auth.js"],"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","USER_FAILED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","GET_USERS","FORGOT_PASSWORD","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","console","log","register","firstName","lastName","role","email","password","confirmPassword","config","headers","body","JSON","stringify","post","login","logout","forgotPassword","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  USER_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n  GET_USERS,\r\n  FORGOT_PASSWORD\r\n} from '../actions/types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('api/v1/users/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: USER_FAILED\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const register =\r\n  ({ firstName, lastName, role, email, password, confirmPassword }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ firstName, lastName, role, email, password, confirmPassword });\r\n\r\n    try {\r\n      const res = await axios.post('api/v1/users/signup', body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    }\r\n  };\r\n\r\n//Login User\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('api/v1/users/login', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n  dispatch({\r\n    type: CLEAR_PROFILE\r\n  });\r\n};\r\n\r\nexport const forgotPassword =\r\n  ({ email }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    \r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    \r\n\r\n    try {\r\n      const res = await axios.post('api/v1/users/forgotpassword', body, config);\r\n\r\n      dispatch({\r\n        type: FORGOT_PASSWORD,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}